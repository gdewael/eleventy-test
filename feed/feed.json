{
	"version": "https://jsonfeed.org/version/1.1",
	"title": "Gaetan De Waele",
	"language": "en",
	"home_page_url": "https://gdewael.github.io/",
	"feed_url": "https://gdewael.github.io/feed/feed.json",
	"description": "Gaetan De Waele&#39;s personal site",
	"author": {
		"name": "Gaetan De Waele",
		"url": "https://gdewael.github.io "
	},
	"items": [
		{
			"id": "https://gdewael.github.io/blog/travelmapping/",
			"url": "https://gdewael.github.io/blog/travelmapping/",
			"title": "Mapping travels with Folium",
			"content_html": "<p>There's a map at my grandparents' home containing sewing pins that indicate the places they have traveled.\nAs a kid, I used to gawk at this map and wonder how these places looked like.\nAs an adult, I have come to appreciate this map as a testament to a life well-spent traveling together.</p>\n<p style=\"text-align: center;\">\n  <img alt=\"A map\" loading=\"lazy\" decoding=\"async\" src=\"https://gdewael.github.io/img/G7zcRw7hlV-700.png\" width=\"700\" height=\"393\">\n  <br>\n  <i>The map at my grandparents' house. Every sewing pin indicates a visited place.</i>\n</p>\n<p>As an homage to their map (and to satisfy my own love for staring at maps and tracking data), I have decided to similarly start tracking travels.\nInstead of using sewing pins, I will be hosting it on this site.\nCurrently, the map contains only multi-day trails.\nI may expand this with dots for places visited using more-conventional means of travel, but for the time being, I'm content with how it looks.\nThe result is:</p>\n<p style=\"text-align: center;\">\n  <iframe src=\"https://gdewael.github.io/treks/index.html\" width=\"700\" height=\"450\"></iframe>\n  <br>\n  <i>A map containing my multi-day trails</i>\n</p>\n<p>As the map itself is very much a work in progress, the remainder of this page will outline how I created the map, and how I integrated it with this site.</p>\n<h2 id=\"overview-and-file-prerequisites\" tabindex=\"-1\">Overview and file prerequisites <a class=\"header-anchor\" href=\"https://gdewael.github.io/blog/travelmapping/\">#</a></h2>\n<p>The setup consists of a python file that (1) reads <em>.gpx</em> and <em>.jpg</em> files, and (2) renders it on a Leaflet.js map using <a href=\"https://python-visualization.github.io/folium/latest/\">folium</a>.\nTo get <em>.gpx</em> files for hikes, I use the <a href=\"https://www.outdooractive.com/en/\">Outdooractive</a> platform, which is also my mobile app during hikes.\nWith my current workflow, the folder structure looks as follows:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">map/\n├── generate_map.py\n├── mapping.json\n├── requirements.txt\n├── img\n│   └── *.jpg\n└── tracks\n    └── *.gpx</code></pre>\n<p>In a <em>mapping.json</em> file, I can record some metadata for every track:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">cat</span> mapping.json\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"camino_primitivo.gpx\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"12-day Camino Primitivo\"</span>, <span class=\"token string\">\"August 2015\"</span>, <span class=\"token string\">\"camino.JPG\"</span>, <span class=\"token string\">\"multi-day\"</span><span class=\"token punctuation\">]</span>,\n    <span class=\"token punctuation\">..</span>.\n    <span class=\"token string\">\"tarn.gpx\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"2-day Packrafting of the Tarn\"</span>, <span class=\"token string\">\"July 2023\"</span>, <span class=\"token string\">\"tarn.jpg\"</span>, <span class=\"token string\">\"packraft\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Currently, for every <em>.gpx</em> file, I'm tracking a short description of the trail, a description of the date, an image file, and what kind of trail it corresponds to.\nAll of these attributes are used in the tooltips of the trails on the map.</p>\n<p>In order to add new tracks, I add a <em>.gpx</em> track, an image, and a new entry in the <em>mapping.json</em> file.\nIn terms of ease-of-use, it's not quite up-to-par with sticking a sewing pin on a paper map, but let's hope it's stands the test of time.</p>\n<h2 id=\"mapping-with-folium\" tabindex=\"-1\">Mapping with Folium <a class=\"header-anchor\" href=\"https://gdewael.github.io/blog/travelmapping/\">#</a></h2>\n<p>The script is kept deliberately simple.\nIt creates a Folium map:</p>\n<details><summary>Code for folium map</summary>\n<pre class=\"language-python\" tabindex=\"0\"><code class=\"language-python\">m <span class=\"token operator\">=</span> folium<span class=\"token punctuation\">.</span>Map<span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">51.057056</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.702139</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> zoom_start <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> tiles<span class=\"token operator\">=</span><span class=\"token string\">\"CartoDB dark_matter\"</span><span class=\"token punctuation\">)</span>\n\nFullscreen<span class=\"token punctuation\">(</span>\n\t\tposition<span class=\"token operator\">=</span><span class=\"token string\">\"topright\"</span><span class=\"token punctuation\">,</span>\n\t\ttitle<span class=\"token operator\">=</span><span class=\"token string\">\"Expand me\"</span><span class=\"token punctuation\">,</span>\n\t\ttitle_cancel<span class=\"token operator\">=</span><span class=\"token string\">\"Exit me\"</span><span class=\"token punctuation\">,</span>\n\t\tforce_separate_button<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>add_to<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></code></pre>\n</details>\n<p>After which it loops over the entries in the metadata <em>mapping.json</em> files:</p>\n<details><summary>Code for adding tracks to map</summary>\n<pre class=\"language-python\" tabindex=\"0\"><code class=\"language-python\">colors <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>color_palette<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>as_hex<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncolor_mapping <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"multi-day\"</span> <span class=\"token punctuation\">:</span> colors<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"packraft\"</span> <span class=\"token punctuation\">:</span> colors<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"day trip\"</span> <span class=\"token punctuation\">:</span> colors<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>mapping_json_path<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> json_file<span class=\"token punctuation\">:</span>\n\t\tdata <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>json_file<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">for</span> ix<span class=\"token punctuation\">,</span> l <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>gpx_folder_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">if</span> l<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\".gpx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t\tname<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">,</span> pic<span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span>\n\n\t\t\t\tcoords <span class=\"token operator\">=</span> load_gpx<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>gpx_folder_path<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\t\t\ttooltip <span class=\"token operator\">=</span> <span class=\"token string\">\"%s (%s)\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">)</span>\n\t\t\t\tpopup <span class=\"token operator\">=</span> img_to_thumbnail_popup<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>img_folder_path<span class=\"token punctuation\">,</span> pic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tooltip<span class=\"token punctuation\">)</span>\n\n\t\t\t\t<span class=\"token comment\"># Outline</span>\n\t\t\t\tfolium<span class=\"token punctuation\">.</span>PolyLine<span class=\"token punctuation\">(</span>\n\t\t\t\t\t\tcoords<span class=\"token punctuation\">,</span> weight<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>add_to<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n\n\t\t\t\t<span class=\"token comment\"># Colored line</span>\n\t\t\t\tfolium<span class=\"token punctuation\">.</span>PolyLine<span class=\"token punctuation\">(</span>\n\t\t\t\t\t\tcoords<span class=\"token punctuation\">,</span> weight<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> color_mapping<span class=\"token punctuation\">[</span>color<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\ttooltip<span class=\"token operator\">=</span>tooltip<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\tpopup<span class=\"token operator\">=</span>popup<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>add_to<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n\nm<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>output_file<span class=\"token punctuation\">)</span></code></pre>\n</details>\n<p>This piece of code makes use of a function <em>load_gpx</em>, that loads <em>.gpx</em> files to pandas DataFrames:</p>\n<details><summary>Code for reading gpx files</summary>\n<pre class=\"language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">load_gpx</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            gpx <span class=\"token operator\">=</span> gpxpy<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Convert to a dataframe one point at a time.</span>\n    points <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> segment <span class=\"token keyword\">in</span> gpx<span class=\"token punctuation\">.</span>tracks<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>segments<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> segment<span class=\"token punctuation\">.</span>points<span class=\"token punctuation\">:</span>\n            points<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'time'</span><span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'latitude'</span><span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>latitude<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'longitude'</span><span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>longitude<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'elevation'</span><span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>elevation<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">.</span>from_records<span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span>\n    coords <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"latitude\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">\"longitude\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> coords</code></pre>\n</details>\n<p>In addition, pictures are processed using a <em>img_to_thumbnail_popup</em> function.\nOf note here is that the images in the popups are programmed to be Base64 encoded and served inline.\nThis is the quickest way I've gotten it set-up, but I realize that this will need to be changed in the future for scalability reasons.</p>\n<details><summary>Code for creating thumbnails</summary>\n<pre class=\"language-python\" tabindex=\"0\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">img_to_thumbnail_popup</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> tooltip<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>BytesIO<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>\n    img<span class=\"token punctuation\">.</span>thumbnail<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># x, y</span>\n    img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token builtin\">buffer</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">\"jpeg\"</span><span class=\"token punctuation\">)</span>\n    encoded <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span><span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>getvalue<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    html <span class=\"token operator\">=</span> <span class=\"token string\">'%s&lt;p>&lt;img src=\"data:image/png;base64,%s\">'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>tooltip<span class=\"token punctuation\">,</span> encoded<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    iframe <span class=\"token operator\">=</span> branca<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>IFrame<span class=\"token punctuation\">(</span>html<span class=\"token operator\">=</span>html<span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span><span class=\"token number\">325</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> <span class=\"token number\">325</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> folium<span class=\"token punctuation\">.</span>Popup<span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">,</span> max_width<span class=\"token operator\">=</span><span class=\"token number\">325</span><span class=\"token punctuation\">)</span></code></pre>\n</details>\n<p>The full script can be found <a href=\"https://github.com/gdewael/gdewael.github.io/blob/main/map/generate_map.py\">here</a>.</p>\n<h2 id=\"integration-with-github-pages-static-site\" tabindex=\"-1\">Integration with GitHub Pages static site <a class=\"header-anchor\" href=\"https://gdewael.github.io/blog/travelmapping/\">#</a></h2>\n<p>The script writes the map to a <em>.html</em> file, which can be readily used in my static site, using iframes, for example.\nI have the Eleventy building of this site hooked up to GitHub Actions, so why not do the same for this map?\nThis way, I don't have to run the python script manually every time I add a new trail.\nTo to this, I add the following &quot;steps&quot; in <a href=\"https://github.com/gdewael/gdewael.github.io/blob/main/.github/workflows/build-and-deploy.yml\">my GitHub Actions workflow file</a>:</p>\n<pre class=\"language-yml\" tabindex=\"0\"><code class=\"language-yml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> setup python\n\t<span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>python@v4\n\t<span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token key atrule\">python-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.12'</span> <span class=\"token comment\"># install the python version needed</span>\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> install python packages\n  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n\t\tpython -m pip install --upgrade pip\n\t\tpip install -r ./map/requirements.txt</span>\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> execute py script <span class=\"token comment\"># run main.py</span>\n\t<span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> python ./map/generate_map.py <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>mapping_json_path map/mapping.json <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>img_folder_path map/img/ <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>gpx_folder_path map/tracks/ <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>output_file content/treks.html\n</code></pre>\n<p>To add a new trail, I just create a new entry in the <em>metadata.json</em> file, along with adding an image and gpx file.\nUpon doing so, the workflow triggers, automatically updating the map and the site along with it.</p>\n<p>I will be hosting a stand-alone page of the map <a href=\"https://gdewael.github.io/map\">here</a>.</p>\n",
			"date_published": "2024-01-18T00:00:00Z"
		}
		
	]
}
